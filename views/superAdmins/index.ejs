<% layout('layouts/dashboard') %>
<% title = 'Manage Super Admins' %>

<h2 class="mb-4">🛡️ Manage Super Admins</h2>

<!-- Save Form -->
<form id="superAdminForm" method="POST" action="/<%= orgName %>/superAdmins">
  <input type="hidden" name="selectedSuperAdmins" id="selectedSuperAdmins">

  <div class="d-flex justify-content-between align-items-center mb-3">
    <div class="w-75">
      <input 
        type="text" 
        id="searchUserInput" 
        class="form-control" 
        placeholder="Type to add a Super Admin..."
        autocomplete="off"
      >
      <ul id="searchDropdown" class="list-group position-absolute w-50" style="z-index: 1000; display:none; max-height:200px; overflow-y:auto;"></ul>
    </div>

    <button type="submit" class="btn btn-success">💾 Save Changes</button>
  </div>

  <hr>

  <h5>🔒 Current Super Admins</h5>
  <ul id="superAdminList" class="list-group">
    <% superAdmins.forEach(admin => { %>
      <li class="list-group-item d-flex justify-content-between align-items-center">
        <span><%= admin.name %> (<%= admin.email %>)</span>
        <button type="button" class="btn btn-sm btn-danger remove-btn" data-id="<%= admin._id %>">Remove</button>
      </li>
    <% }) %>
  </ul>

</form>

<script>
  const allUsers = <%- JSON.stringify(allUsers) %>; // All active users
  let selectedSuperAdmins = <%- JSON.stringify(superAdmins.map(a => a._id)) %>;

  const input = document.getElementById('searchUserInput');
  const dropdown = document.getElementById('searchDropdown');
  const superAdminList = document.getElementById('superAdminList');
  const selectedField = document.getElementById('selectedSuperAdmins');

  // Update hidden field before submit
  document.getElementById('superAdminForm').addEventListener('submit', function(e) {
    selectedField.value = JSON.stringify(selectedSuperAdmins);
  });

  // Search as you type
  input.addEventListener('input', function() {
    const value = input.value.trim().toLowerCase();
    dropdown.innerHTML = '';

    if (value.length >= 3) {
      const matches = allUsers.filter(u => 
        (u.name && u.name.toLowerCase().includes(value)) ||
        (u.email && u.email.toLowerCase().includes(value))
      );

      matches.forEach(user => {
        if (selectedSuperAdmins.includes(user._id)) return; // Already added

        const item = document.createElement('li');
        item.classList.add('list-group-item', 'list-group-item-action');
        item.innerText = `${user.name} (${user.email})`;
        item.dataset.id = user._id;

        item.addEventListener('click', () => {
          addSuperAdmin(user);
          input.value = '';
          dropdown.style.display = 'none';
        });

        dropdown.appendChild(item);
      });

      dropdown.style.display = matches.length > 0 ? 'block' : 'none';
    } else {
      dropdown.style.display = 'none';
    }
  });

  document.addEventListener('click', function(e) {
    if (!dropdown.contains(e.target) && e.target !== input) {
      dropdown.style.display = 'none';
    }
  });

  // Add a Super Admin
  function addSuperAdmin(user) {
    selectedSuperAdmins.push(user._id);

    const li = document.createElement('li');
    li.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');
    li.innerHTML = `
      <span>${user.name} (${user.email})</span>
      <button type="button" class="btn btn-sm btn-danger remove-btn" data-id="${user._id}">Remove</button>
    `;
    superAdminList.appendChild(li);

    attachRemoveHandlers();
  }

  // Remove a Super Admin
  function attachRemoveHandlers() {
    const buttons = document.querySelectorAll('.remove-btn');
    buttons.forEach(btn => {
      btn.onclick = function() {
        if (selectedSuperAdmins.length <= 1) {
          alert('At least one Super Admin must remain.');
          return;
        }

        const idToRemove = this.dataset.id;
        selectedSuperAdmins = selectedSuperAdmins.filter(id => id !== idToRemove);
        this.parentElement.remove();
      }
    });
  }

  // Attach initially
  attachRemoveHandlers();
</script>
