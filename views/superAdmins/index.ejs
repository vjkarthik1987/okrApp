<% layout('layouts/dashboard') %>
<% title = 'Manage Super Admins' %>

<h2 class="mb-4">🛡️ Manage Super Admins</h2>

<form id="superAdminForm" method="POST" action="/<%= orgName %>/superAdmins" class="animated-form">
  <input type="hidden" name="selectedSuperAdmins" id="selectedSuperAdmins">

  <!-- Search & Save -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <div class="w-75 position-relative">
      <label for="searchUserInput" class="form-label funky-label">➕ Add Super Admin</label>
      <input 
        type="text" 
        id="searchUserInput" 
        class="form-control input-pop" 
        placeholder="Type name or email..."
        autocomplete="off"
      >
      <ul id="searchDropdown" class="list-group position-absolute w-100 shadow-sm mt-1" 
          style="z-index: 1000; display:none; max-height:200px; overflow-y:auto;"></ul>
    </div>

    <button type="submit" class="btn btn-success mt-4">💾 Save Changes</button>
  </div>

  <hr>

  <!-- Current Admins List -->
  <h5 class="mb-3">🔒 Current Super Admins</h5>
  <ul id="superAdminList" class="list-group shadow-sm">
    <% superAdmins.forEach(admin => { %>
      <li class="list-group-item d-flex justify-content-between align-items-center">
        <span>👤 <strong><%= admin.name %></strong> <small class="text-muted">(<%= admin.email %>)</small></span>
        <button type="button" class="btn btn-sm btn-outline-danger remove-btn" data-id="<%= admin._id %>">🗑 Remove</button>
      </li>
    <% }) %>
  </ul>
</form>

<script>
  const allUsers = <%- JSON.stringify(allUsers) %>;
  let selectedSuperAdmins = <%- JSON.stringify(superAdmins.map(a => a._id)) %>;

  const input = document.getElementById('searchUserInput');
  const dropdown = document.getElementById('searchDropdown');
  const superAdminList = document.getElementById('superAdminList');
  const selectedField = document.getElementById('selectedSuperAdmins');

  document.getElementById('superAdminForm').addEventListener('submit', function() {
    selectedField.value = JSON.stringify(selectedSuperAdmins);
  });

  input.addEventListener('input', function() {
    const value = input.value.trim().toLowerCase();
    dropdown.innerHTML = '';

    if (value.length >= 3) {
      const matches = allUsers.filter(u => 
        (u.name && u.name.toLowerCase().includes(value)) ||
        (u.email && u.email.toLowerCase().includes(value))
      );

      matches.forEach(user => {
        if (selectedSuperAdmins.includes(user._id)) return;

        const item = document.createElement('li');
        item.classList.add('list-group-item', 'list-group-item-action');
        item.innerHTML = `👤 <strong>${user.name}</strong> <small class="text-muted">(${user.email})</small>`;
        item.dataset.id = user._id;

        item.addEventListener('click', () => {
          addSuperAdmin(user);
          input.value = '';
          dropdown.style.display = 'none';
        });

        dropdown.appendChild(item);
      });

      dropdown.style.display = matches.length > 0 ? 'block' : 'none';
    } else {
      dropdown.style.display = 'none';
    }
  });

  document.addEventListener('click', function(e) {
    if (!dropdown.contains(e.target) && e.target !== input) {
      dropdown.style.display = 'none';
    }
  });

  function addSuperAdmin(user) {
    selectedSuperAdmins.push(user._id);

    const li = document.createElement('li');
    li.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');
    li.innerHTML = `
      <span>👤 <strong>${user.name}</strong> <small class="text-muted">(${user.email})</small></span>
      <button type="button" class="btn btn-sm btn-outline-danger remove-btn" data-id="${user._id}">🗑 Remove</button>
    `;
    superAdminList.appendChild(li);

    attachRemoveHandlers();
  }

  function attachRemoveHandlers() {
    const buttons = document.querySelectorAll('.remove-btn');
    buttons.forEach(btn => {
      btn.onclick = function() {
        if (selectedSuperAdmins.length <= 1) {
          alert('⚠️ At least one Super Admin must remain.');
          return;
        }

        const idToRemove = this.dataset.id;
        selectedSuperAdmins = selectedSuperAdmins.filter(id => id !== idToRemove);
        this.parentElement.remove();
      }
    });
  }

  attachRemoveHandlers();
</script>